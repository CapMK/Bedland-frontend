// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`SortButton > renders correctly 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #fff;
  border: 1px solid #fff;
  border-radius: 0.5rem;
  color: #1B1A1A;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c1:hover {
  background-color: #fff;
  border: 1px solid #fff;
  color: #6573FF;
}

.c0 {
  position: relative;
}

<body>
    <div>
      <div
        class="c0"
      >
        <button
          class="c1"
        >
          <svg
            data-testid="arrowDown-icon"
            fill="none"
            height="12"
            viewBox="0 0 12 7"
            width="12"
            xmlns="http://www.w3.org/2000/svg"
          >
            <mask
              id="mask-arrowDown"
            />
            <path
              d="M10.6667 1.33325L6.08333 5.49992L1.5 1.33325"
              stroke="#1B1A1A"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="1.67"
            />
          </svg>
          Sort Buildings
        </button>
      </div>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #fff;
  border: 1px solid #fff;
  border-radius: 0.5rem;
  color: #1B1A1A;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c1:hover {
  background-color: #fff;
  border: 1px solid #fff;
  color: #6573FF;
}

.c0 {
  position: relative;
}

<div>
    <div
      class="c0"
    >
      <button
        class="c1"
      >
        <svg
          data-testid="arrowDown-icon"
          fill="none"
          height="12"
          viewBox="0 0 12 7"
          width="12"
          xmlns="http://www.w3.org/2000/svg"
        >
          <mask
            id="mask-arrowDown"
          />
          <path
            d="M10.6667 1.33325L6.08333 5.49992L1.5 1.33325"
            stroke="#1B1A1A"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.67"
          />
        </svg>
        Sort Buildings
      </button>
    </div>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

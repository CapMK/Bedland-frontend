// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Button > Basic button types > 'ghost' Button renders correctly - 'blue' 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #4553DD;
  border-radius: 0.5rem;
  color: #4553DD;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #4553DD1A;
  border: 1px solid #4553DD;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #4553DD;
  color: #4553DD;
  padding: undefinedrem 1rem;
}

.c1:hover {
  background-color: #4553DD1A;
  border: 1.75px solid #4553DD;
}

<body>
    <div>
      <button
        class="c0 c1"
      >
        ghost
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #4553DD;
  border-radius: 0.5rem;
  color: #4553DD;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #4553DD1A;
  border: 1px solid #4553DD;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #4553DD;
  color: #4553DD;
  padding: undefinedrem 1rem;
}

.c1:hover {
  background-color: #4553DD1A;
  border: 1.75px solid #4553DD;
}

<div>
    <button
      class="c0 c1"
    >
      ghost
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > 'ghost' Button renders correctly - 'orange' 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #F56513;
  border-radius: 0.5rem;
  color: #F56513;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #F565131A;
  border: 1px solid #F56513;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #F56513;
  color: #F56513;
  padding: undefinedrem 1rem;
}

.c1:hover {
  background-color: #F565131A;
  border: 1.75px solid #F56513;
}

<body>
    <div>
      <button
        class="c0 c1"
      >
        ghost
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #F56513;
  border-radius: 0.5rem;
  color: #F56513;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #F565131A;
  border: 1px solid #F56513;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #F56513;
  color: #F56513;
  padding: undefinedrem 1rem;
}

.c1:hover {
  background-color: #F565131A;
  border: 1.75px solid #F56513;
}

<div>
    <button
      class="c0 c1"
    >
      ghost
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > 'ghost' Button renders correctly - 'white' 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #fff;
  border-radius: 0.5rem;
  color: #FCFEFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #fff1A;
  border: 1px solid #fff;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #fff;
  color: #FCFEFF;
  padding: undefinedrem 1rem;
}

.c1:hover {
  background-color: #fff1A;
  border: 1.75px solid #fff;
}

<body>
    <div>
      <button
        class="c0 c1"
      >
        ghost
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #fff;
  border-radius: 0.5rem;
  color: #FCFEFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #fff1A;
  border: 1px solid #fff;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #fff;
  color: #FCFEFF;
  padding: undefinedrem 1rem;
}

.c1:hover {
  background-color: #fff1A;
  border: 1.75px solid #fff;
}

<div>
    <button
      class="c0 c1"
    >
      ghost
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > 'ghost' Button renders correctly - with icon 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #F56513;
  border-radius: 0.5rem;
  color: #F56513;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #F565131A;
  border: 1px solid #F56513;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #F56513;
  color: #F56513;
  padding: undefinedrem 1rem;
}

.c1:hover {
  background-color: #F565131A;
  border: 1.75px solid #F56513;
}

<body>
    <div>
      <button
        class="c0 c1"
      >
        <svg
          data-testid="alert-icon"
          fill="none"
          height="20"
          viewBox="0 0 21 20"
          width="20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <mask
            id="mask-alert"
          />
          <path
            d="M10.5 17.5C14.6421 17.5 18 14.1421 18 10C18 5.85786 14.6421 2.5 10.5 2.5C6.35786 2.5 3 5.85786 3 10C3 14.1421 6.35786 17.5 10.5 17.5Z"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
          <path
            d="M10.5001 14.1666C10.9603 14.1666 11.3334 13.7935 11.3334 13.3333C11.3334 12.8731 10.9603 12.5 10.5001 12.5C10.0398 12.5 9.66675 12.8731 9.66675 13.3333C9.66675 13.7935 10.0398 14.1666 10.5001 14.1666Z"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
          <path
            d="M10.5 5.83331V9.99998"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
        </svg>
        ghost
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #F56513;
  border-radius: 0.5rem;
  color: #F56513;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #F565131A;
  border: 1px solid #F56513;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #F56513;
  color: #F56513;
  padding: undefinedrem 1rem;
}

.c1:hover {
  background-color: #F565131A;
  border: 1.75px solid #F56513;
}

<div>
    <button
      class="c0 c1"
    >
      <svg
        data-testid="alert-icon"
        fill="none"
        height="20"
        viewBox="0 0 21 20"
        width="20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <mask
          id="mask-alert"
        />
        <path
          d="M10.5 17.5C14.6421 17.5 18 14.1421 18 10C18 5.85786 14.6421 2.5 10.5 2.5C6.35786 2.5 3 5.85786 3 10C3 14.1421 6.35786 17.5 10.5 17.5Z"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
        <path
          d="M10.5001 14.1666C10.9603 14.1666 11.3334 13.7935 11.3334 13.3333C11.3334 12.8731 10.9603 12.5 10.5001 12.5C10.0398 12.5 9.66675 12.8731 9.66675 13.3333C9.66675 13.7935 10.0398 14.1666 10.5001 14.1666Z"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
        <path
          d="M10.5 5.83331V9.99998"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
      </svg>
      ghost
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > 'icon' Button renders correctly - 'orange' 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  color: #4553DD;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<body>
    <div>
      <button
        class="c0"
      >
        icon
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  color: #4553DD;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<div>
    <button
      class="c0"
    >
      icon
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > 'icon' Button renders correctly - with icon 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  color: #4553DD;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<body>
    <div>
      <button
        class="c0"
      >
        <svg
          data-testid="alert-icon"
          fill="none"
          height="20"
          viewBox="0 0 21 20"
          width="20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <mask
            id="mask-alert"
          />
          <path
            d="M10.5 17.5C14.6421 17.5 18 14.1421 18 10C18 5.85786 14.6421 2.5 10.5 2.5C6.35786 2.5 3 5.85786 3 10C3 14.1421 6.35786 17.5 10.5 17.5Z"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
          <path
            d="M10.5001 14.1666C10.9603 14.1666 11.3334 13.7935 11.3334 13.3333C11.3334 12.8731 10.9603 12.5 10.5001 12.5C10.0398 12.5 9.66675 12.8731 9.66675 13.3333C9.66675 13.7935 10.0398 14.1666 10.5001 14.1666Z"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
          <path
            d="M10.5 5.83331V9.99998"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
        </svg>
        icon
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  color: #4553DD;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<div>
    <button
      class="c0"
    >
      <svg
        data-testid="alert-icon"
        fill="none"
        height="20"
        viewBox="0 0 21 20"
        width="20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <mask
          id="mask-alert"
        />
        <path
          d="M10.5 17.5C14.6421 17.5 18 14.1421 18 10C18 5.85786 14.6421 2.5 10.5 2.5C6.35786 2.5 3 5.85786 3 10C3 14.1421 6.35786 17.5 10.5 17.5Z"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
        <path
          d="M10.5001 14.1666C10.9603 14.1666 11.3334 13.7935 11.3334 13.3333C11.3334 12.8731 10.9603 12.5 10.5001 12.5C10.0398 12.5 9.66675 12.8731 9.66675 13.3333C9.66675 13.7935 10.0398 14.1666 10.5001 14.1666Z"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
        <path
          d="M10.5 5.83331V9.99998"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
      </svg>
      icon
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > 'notificationItem' Button renders correctly - 'blue' 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #4553DD;
  border-radius: 0.5rem;
  color: #4553DD;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #4553DD1A;
  border: 1px solid #4553DD;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #4553DD;
  color: #4553DD;
  padding: 0.3125rem 1rem;
}

.c1:hover {
  background-color: #4553DD1A;
  border: 1.75px solid #4553DD;
}

<body>
    <div>
      <button
        class="c0 c1"
      >
        notificationItem
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #4553DD;
  border-radius: 0.5rem;
  color: #4553DD;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #4553DD1A;
  border: 1px solid #4553DD;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #4553DD;
  color: #4553DD;
  padding: 0.3125rem 1rem;
}

.c1:hover {
  background-color: #4553DD1A;
  border: 1.75px solid #4553DD;
}

<div>
    <button
      class="c0 c1"
    >
      notificationItem
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > 'notificationItem' Button renders correctly - 'orange' 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #F56513;
  border-radius: 0.5rem;
  color: #F56513;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #F565131A;
  border: 1px solid #F56513;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #F56513;
  color: #F56513;
  padding: 0.3125rem 1rem;
}

.c1:hover {
  background-color: #F565131A;
  border: 1.75px solid #F56513;
}

<body>
    <div>
      <button
        class="c0 c1"
      >
        notificationItem
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #F56513;
  border-radius: 0.5rem;
  color: #F56513;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #F565131A;
  border: 1px solid #F56513;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #F56513;
  color: #F56513;
  padding: 0.3125rem 1rem;
}

.c1:hover {
  background-color: #F565131A;
  border: 1.75px solid #F56513;
}

<div>
    <button
      class="c0 c1"
    >
      notificationItem
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > 'notificationItem' Button renders correctly - 'white' 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #fff;
  border-radius: 0.5rem;
  color: #FCFEFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #fff1A;
  border: 1px solid #fff;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #fff;
  color: #FCFEFF;
  padding: 0.3125rem 1rem;
}

.c1:hover {
  background-color: #fff1A;
  border: 1.75px solid #fff;
}

<body>
    <div>
      <button
        class="c0 c1"
      >
        notificationItem
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #fff;
  border-radius: 0.5rem;
  color: #FCFEFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #fff1A;
  border: 1px solid #fff;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #fff;
  color: #FCFEFF;
  padding: 0.3125rem 1rem;
}

.c1:hover {
  background-color: #fff1A;
  border: 1.75px solid #fff;
}

<div>
    <button
      class="c0 c1"
    >
      notificationItem
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > 'notificationItem' Button renders correctly - with icon 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #F56513;
  border-radius: 0.5rem;
  color: #F56513;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #F565131A;
  border: 1px solid #F56513;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #F56513;
  color: #F56513;
  padding: 0.3125rem 1rem;
}

.c1:hover {
  background-color: #F565131A;
  border: 1.75px solid #F56513;
}

<body>
    <div>
      <button
        class="c0 c1"
      >
        <svg
          data-testid="alert-icon"
          fill="none"
          height="20"
          viewBox="0 0 21 20"
          width="20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <mask
            id="mask-alert"
          />
          <path
            d="M10.5 17.5C14.6421 17.5 18 14.1421 18 10C18 5.85786 14.6421 2.5 10.5 2.5C6.35786 2.5 3 5.85786 3 10C3 14.1421 6.35786 17.5 10.5 17.5Z"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
          <path
            d="M10.5001 14.1666C10.9603 14.1666 11.3334 13.7935 11.3334 13.3333C11.3334 12.8731 10.9603 12.5 10.5001 12.5C10.0398 12.5 9.66675 12.8731 9.66675 13.3333C9.66675 13.7935 10.0398 14.1666 10.5001 14.1666Z"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
          <path
            d="M10.5 5.83331V9.99998"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
        </svg>
        notificationItem
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #F56513;
  border-radius: 0.5rem;
  color: #F56513;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #F565131A;
  border: 1px solid #F56513;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #F56513;
  color: #F56513;
  padding: 0.3125rem 1rem;
}

.c1:hover {
  background-color: #F565131A;
  border: 1.75px solid #F56513;
}

<div>
    <button
      class="c0 c1"
    >
      <svg
        data-testid="alert-icon"
        fill="none"
        height="20"
        viewBox="0 0 21 20"
        width="20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <mask
          id="mask-alert"
        />
        <path
          d="M10.5 17.5C14.6421 17.5 18 14.1421 18 10C18 5.85786 14.6421 2.5 10.5 2.5C6.35786 2.5 3 5.85786 3 10C3 14.1421 6.35786 17.5 10.5 17.5Z"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
        <path
          d="M10.5001 14.1666C10.9603 14.1666 11.3334 13.7935 11.3334 13.3333C11.3334 12.8731 10.9603 12.5 10.5001 12.5C10.0398 12.5 9.66675 12.8731 9.66675 13.3333C9.66675 13.7935 10.0398 14.1666 10.5001 14.1666Z"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
        <path
          d="M10.5 5.83331V9.99998"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
      </svg>
      notificationItem
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > 'primary' Button renders correctly - 'blue' 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #4553DD;
  border: 1px solid #4553DD;
  border-radius: 0.5rem;
  color: #FCFEFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #6573FF;
  border: 1px solid #6573FF;
}

<body>
    <div>
      <button
        class="c0"
      >
        primary
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #4553DD;
  border: 1px solid #4553DD;
  border-radius: 0.5rem;
  color: #FCFEFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #6573FF;
  border: 1px solid #6573FF;
}

<div>
    <button
      class="c0"
    >
      primary
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > 'primary' Button renders correctly - 'orange' 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #F56513;
  border: 1px solid #F56513;
  border-radius: 0.5rem;
  color: #FCFEFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #FF7C33;
  border: 1px solid #FF7C33;
}

<body>
    <div>
      <button
        class="c0"
      >
        primary
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #F56513;
  border: 1px solid #F56513;
  border-radius: 0.5rem;
  color: #FCFEFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #FF7C33;
  border: 1px solid #FF7C33;
}

<div>
    <button
      class="c0"
    >
      primary
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > 'primary' Button renders correctly - 'white' 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #fff;
  border: 1px solid #fff;
  border-radius: 0.5rem;
  color: #1B1A1A;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #fff;
  border: 1px solid #fff;
  color: #1B1A1A;
}

<body>
    <div>
      <button
        class="c0"
      >
        primary
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #fff;
  border: 1px solid #fff;
  border-radius: 0.5rem;
  color: #1B1A1A;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #fff;
  border: 1px solid #fff;
  color: #1B1A1A;
}

<div>
    <button
      class="c0"
    >
      primary
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > 'primary' Button renders correctly - with icon 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #F56513;
  border: 1px solid #F56513;
  border-radius: 0.5rem;
  color: #FCFEFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #FF7C33;
  border: 1px solid #FF7C33;
}

<body>
    <div>
      <button
        class="c0"
      >
        <svg
          data-testid="alert-icon"
          fill="none"
          height="20"
          viewBox="0 0 21 20"
          width="20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <mask
            id="mask-alert"
          />
          <path
            d="M10.5 17.5C14.6421 17.5 18 14.1421 18 10C18 5.85786 14.6421 2.5 10.5 2.5C6.35786 2.5 3 5.85786 3 10C3 14.1421 6.35786 17.5 10.5 17.5Z"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
          <path
            d="M10.5001 14.1666C10.9603 14.1666 11.3334 13.7935 11.3334 13.3333C11.3334 12.8731 10.9603 12.5 10.5001 12.5C10.0398 12.5 9.66675 12.8731 9.66675 13.3333C9.66675 13.7935 10.0398 14.1666 10.5001 14.1666Z"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
          <path
            d="M10.5 5.83331V9.99998"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
        </svg>
        primary
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #F56513;
  border: 1px solid #F56513;
  border-radius: 0.5rem;
  color: #FCFEFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #FF7C33;
  border: 1px solid #FF7C33;
}

<div>
    <button
      class="c0"
    >
      <svg
        data-testid="alert-icon"
        fill="none"
        height="20"
        viewBox="0 0 21 20"
        width="20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <mask
          id="mask-alert"
        />
        <path
          d="M10.5 17.5C14.6421 17.5 18 14.1421 18 10C18 5.85786 14.6421 2.5 10.5 2.5C6.35786 2.5 3 5.85786 3 10C3 14.1421 6.35786 17.5 10.5 17.5Z"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
        <path
          d="M10.5001 14.1666C10.9603 14.1666 11.3334 13.7935 11.3334 13.3333C11.3334 12.8731 10.9603 12.5 10.5001 12.5C10.0398 12.5 9.66675 12.8731 9.66675 13.3333C9.66675 13.7935 10.0398 14.1666 10.5001 14.1666Z"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
        <path
          d="M10.5 5.83331V9.99998"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
      </svg>
      primary
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > 'text' Button renders correctly - 'blue' 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: 0.5rem;
  color: #4553DD;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #4553DD0D;
  border: 1px solid transparent;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid transparent;
  color: #4553DD;
  padding: undefinedrem 1rem;
}

.c1:hover {
  background-color: #4553DD0D;
  border: 1.75px solid transparent;
}

.c1:focus {
  background-color: #4553DD26;
  border: 1.75px solid transparent;
}

<body>
    <div>
      <button
        class="c0 c1"
      >
        text
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: 0.5rem;
  color: #4553DD;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #4553DD0D;
  border: 1px solid transparent;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid transparent;
  color: #4553DD;
  padding: undefinedrem 1rem;
}

.c1:hover {
  background-color: #4553DD0D;
  border: 1.75px solid transparent;
}

.c1:focus {
  background-color: #4553DD26;
  border: 1.75px solid transparent;
}

<div>
    <button
      class="c0 c1"
    >
      text
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > 'text' Button renders correctly - 'orange' 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: 0.5rem;
  color: #FF7C33;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #FF7C330D;
  border: 1px solid transparent;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid transparent;
  color: #FF7C33;
  padding: undefinedrem 1rem;
}

.c1:hover {
  background-color: #FF7C330D;
  border: 1.75px solid transparent;
}

.c1:focus {
  background-color: #FF7C3326;
  border: 1.75px solid transparent;
}

<body>
    <div>
      <button
        class="c0 c1"
      >
        text
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: 0.5rem;
  color: #FF7C33;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #FF7C330D;
  border: 1px solid transparent;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid transparent;
  color: #FF7C33;
  padding: undefinedrem 1rem;
}

.c1:hover {
  background-color: #FF7C330D;
  border: 1.75px solid transparent;
}

.c1:focus {
  background-color: #FF7C3326;
  border: 1.75px solid transparent;
}

<div>
    <button
      class="c0 c1"
    >
      text
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > 'text' Button renders correctly - 'white' 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: 0.5rem;
  color: #FCFEFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #fff0D;
  border: 1px solid transparent;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid transparent;
  color: #FCFEFF;
  padding: undefinedrem 1rem;
}

.c1:hover {
  background-color: #fff0D;
  border: 1.75px solid transparent;
}

.c1:focus {
  background-color: #fff26;
  border: 1.75px solid transparent;
}

<body>
    <div>
      <button
        class="c0 c1"
      >
        text
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: 0.5rem;
  color: #FCFEFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #fff0D;
  border: 1px solid transparent;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid transparent;
  color: #FCFEFF;
  padding: undefinedrem 1rem;
}

.c1:hover {
  background-color: #fff0D;
  border: 1.75px solid transparent;
}

.c1:focus {
  background-color: #fff26;
  border: 1.75px solid transparent;
}

<div>
    <button
      class="c0 c1"
    >
      text
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > 'text' Button renders correctly - with icon 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: 0.5rem;
  color: #FF7C33;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #FF7C330D;
  border: 1px solid transparent;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid transparent;
  color: #FF7C33;
  padding: undefinedrem 1rem;
}

.c1:hover {
  background-color: #FF7C330D;
  border: 1.75px solid transparent;
}

.c1:focus {
  background-color: #FF7C3326;
  border: 1.75px solid transparent;
}

<body>
    <div>
      <button
        class="c0 c1"
      >
        <svg
          data-testid="alert-icon"
          fill="none"
          height="20"
          viewBox="0 0 21 20"
          width="20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <mask
            id="mask-alert"
          />
          <path
            d="M10.5 17.5C14.6421 17.5 18 14.1421 18 10C18 5.85786 14.6421 2.5 10.5 2.5C6.35786 2.5 3 5.85786 3 10C3 14.1421 6.35786 17.5 10.5 17.5Z"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
          <path
            d="M10.5001 14.1666C10.9603 14.1666 11.3334 13.7935 11.3334 13.3333C11.3334 12.8731 10.9603 12.5 10.5001 12.5C10.0398 12.5 9.66675 12.8731 9.66675 13.3333C9.66675 13.7935 10.0398 14.1666 10.5001 14.1666Z"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
          <path
            d="M10.5 5.83331V9.99998"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
        </svg>
        text
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: 0.5rem;
  color: #FF7C33;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #FF7C330D;
  border: 1px solid transparent;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid transparent;
  color: #FF7C33;
  padding: undefinedrem 1rem;
}

.c1:hover {
  background-color: #FF7C330D;
  border: 1.75px solid transparent;
}

.c1:focus {
  background-color: #FF7C3326;
  border: 1.75px solid transparent;
}

<div>
    <button
      class="c0 c1"
    >
      <svg
        data-testid="alert-icon"
        fill="none"
        height="20"
        viewBox="0 0 21 20"
        width="20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <mask
          id="mask-alert"
        />
        <path
          d="M10.5 17.5C14.6421 17.5 18 14.1421 18 10C18 5.85786 14.6421 2.5 10.5 2.5C6.35786 2.5 3 5.85786 3 10C3 14.1421 6.35786 17.5 10.5 17.5Z"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
        <path
          d="M10.5001 14.1666C10.9603 14.1666 11.3334 13.7935 11.3334 13.3333C11.3334 12.8731 10.9603 12.5 10.5001 12.5C10.0398 12.5 9.66675 12.8731 9.66675 13.3333C9.66675 13.7935 10.0398 14.1666 10.5001 14.1666Z"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
        <path
          d="M10.5 5.83331V9.99998"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
      </svg>
      text
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Basic button types > Button wrapper renders correctly 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  height: 10rem;
  margin-top: 1rem;
  width: 10rem;
}

<body>
    <div>
      <div
        class="c0"
      >
        Text
      </div>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  height: 10rem;
  margin-top: 1rem;
  width: 10rem;
}

<div>
    <div
      class="c0"
    >
      Text
    </div>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Specific button types > Icon Button renders correctly 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  color: #4553DD;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<body>
    <div>
      <button
        class="c0"
      >
        <svg
          data-testid="alert-icon"
          fill="none"
          height="24"
          viewBox="0 0 21 20"
          width="24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <mask
            id="mask-alert"
          />
          <path
            d="M10.5 17.5C14.6421 17.5 18 14.1421 18 10C18 5.85786 14.6421 2.5 10.5 2.5C6.35786 2.5 3 5.85786 3 10C3 14.1421 6.35786 17.5 10.5 17.5Z"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
          <path
            d="M10.5001 14.1666C10.9603 14.1666 11.3334 13.7935 11.3334 13.3333C11.3334 12.8731 10.9603 12.5 10.5001 12.5C10.0398 12.5 9.66675 12.8731 9.66675 13.3333C9.66675 13.7935 10.0398 14.1666 10.5001 14.1666Z"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
          <path
            d="M10.5 5.83331V9.99998"
            stroke="#4553DD"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.66667"
          />
        </svg>
      </button>
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  color: #4553DD;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<div>
    <button
      class="c0"
    >
      <svg
        data-testid="alert-icon"
        fill="none"
        height="24"
        viewBox="0 0 21 20"
        width="24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <mask
          id="mask-alert"
        />
        <path
          d="M10.5 17.5C14.6421 17.5 18 14.1421 18 10C18 5.85786 14.6421 2.5 10.5 2.5C6.35786 2.5 3 5.85786 3 10C3 14.1421 6.35786 17.5 10.5 17.5Z"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
        <path
          d="M10.5001 14.1666C10.9603 14.1666 11.3334 13.7935 11.3334 13.3333C11.3334 12.8731 10.9603 12.5 10.5001 12.5C10.0398 12.5 9.66675 12.8731 9.66675 13.3333C9.66675 13.7935 10.0398 14.1666 10.5001 14.1666Z"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
        <path
          d="M10.5 5.83331V9.99998"
          stroke="#4553DD"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.66667"
        />
      </svg>
    </button>
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Button > Specific button types > NotificationItem Button renders correctly 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #F56513;
  border-radius: 0.5rem;
  color: #F56513;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #F565131A;
  border: 1px solid #F56513;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #F56513;
  color: #F56513;
  padding: 0.3125rem 1rem;
}

.c1:hover {
  background-color: #F565131A;
  border: 1.75px solid #F56513;
}

<body>
    <div>
      <button
        class="c0 c1"
      />
      <div
        data-testid="location-display"
      >
        /
      </div>
    </div>
  </body>,
  "container": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: transparent;
  border: 1px solid #F56513;
  border-radius: 0.5rem;
  color: #F56513;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5625rem 1rem;
  white-space: nowrap;
  width: 100%;
  font-family: Source Sans Pro,sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
}

.c0:hover {
  background-color: #F565131A;
  border: 1px solid #F56513;
}

.c1 {
  background-color: transparent;
  border: 1.75px solid #F56513;
  color: #F56513;
  padding: 0.3125rem 1rem;
}

.c1:hover {
  background-color: #F565131A;
  border: 1.75px solid #F56513;
}

<div>
    <button
      class="c0 c1"
    />
    <div
      data-testid="location-display"
    >
      /
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

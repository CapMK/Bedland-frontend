# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

image: 'atlassian/default-image:4'

options:
  max-time: 7

pipelines:
  default:
    - step:
        name: Clear cache if dependency changed
        script:
          - pipe: 'atlassian/bitbucket-clear-cache:3.2.0'
            variables:
              BITBUCKET_USERNAME: $BB_USERNAME
              BITBUCKET_APP_PASSWORD: $BB_APP_PASS
              CACHES: [ "node" ]
        # condition:
        #   changesets:
        #     includePaths:
        #       - package.json
        #       - package-lock.json
    - step:
        name: Install & Lint & Test
        caches:
          - node
        script:
          - echo "--- Install dependencies ---"
          - npm install
          - echo "--- Check lint ---"
          - npm run lint
          - echo "--- Test ---"
          - npm test

    - step:
        name: Build
        caches:
          - node
        script:
          - echo "--- Build ---"
          - npm run build
        artifacts:
          - build/**

      #- step:
      #    name: 'Security scan'
      #    script:
      #      - echo "Your security scan goes here..."

    # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
    #- step:
    #    name: 'Deployment to Staging'
    #    deployment: staging
    #    script:
    #      - echo "Your deployment to staging script goes here..."
    #- step:
    #    name: 'Deployment to Production'
    #    deployment: production
    #    trigger: 'manual'
    #    script:
    #      - echo "Your deployment to production script goes here..."
